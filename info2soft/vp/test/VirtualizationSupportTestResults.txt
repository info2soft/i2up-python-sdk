<START-----------------------------------------------------------
Method: batchCreateVpRep
body: {
 "vm_list": [
  {
   "vm_name": "\u65b0\u5efa\u865a\u62df\u673a1",
   "vm_ref": "vm-11877",
   "shd_name": "\u65b0\u5efa\u865a\u62df\u673a1_move",
   "disk_list": [
    {
     "disk_path": "",
     "disk_name": "[datastore1 (1)] \u6d4b\u8bd511_\u4e34\u65f6\u6d4b\u8bd511/\u6d4b\u8bd511_\u4e34\u65f6\u6d4b\u8bd511_5-000002.vmdk",
     "new_ds": "datastore2",
     "id": "",
     "is_ignored": 1
    }
   ],
   "scripts_type": "",
   "scripts": "",
   "cpu": "",
   "core_per_sock": "",
   "mem_mb": "",
   "os_type": 1,
   "new_vm_name": "",
   "dynamic_mem": 1,
   "networks": [
    {
     "network_id": "",
     "network_name": "",
     "keep_mac": 1,
     "source_network_name": "",
     "source_network_id": "",
     "mac_address": ""
    }
   ],
   "bk_uuid": "",
   "bk_path": "",
   "add_drill": 1,
   "auto": 1,
   "vm_uuid": ""
  }
 ],
 "base_info_list": {
  "rule_type": 0,
  "biz_grp_list": "",
  "quick_back": 1,
  "quiet_snap": 1,
  "lan_free": 23,
  "mem_snap": 1,
  "band_width": "-1",
  "auto_shutdown": 1,
  "auto_startup": 0,
  "overwrite": 1,
  "bkup_schedule": {
   "sched_time_start": "",
   "limit": 1,
   "sched_day": "",
   "sched_every": 1,
   "sched_time": [],
   "sched_gap_min": 0
  },
  "bkup_policy": 1,
  "backup_type": "i",
  "automate": 0,
  "tgt_uuid": "",
  "new_dc": "",
  "new_dc_mor": "",
  "new_host": "",
  "new_ds": "",
  "network_id": "",
  "network_name": ""
 },
 "common_params": {
  "batch_name": "",
  "rep_prefix": "",
  "rep_sufix": "",
  "variable_type": 1
 },
 "_": "3d19ddf0"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10121001,
  "message": "[10121001] VP does not exist"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: clearFinishVpRecovery
body: {
 "operate": "start",
 "rule_uuids": "641A27BB-B4D1-F482-1FB8-E856898626DA",
 "rule_type": 0,
 "group_uuids": [],
 "_": "3f292007"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: createTargeVm
body: {
 "operate": "start",
 "rule_uuids": "1C89A121-6B03-24B2-9273-D4B93C0687AD",
 "snap_point": "",
 "op_code": "",
 "group_uuids": [],
 "power_on": 1,
 "_": "3edcb386"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: createVpBackup
body: {
 "del_bkup_data": 0,
 "quiet_snap": 0,
 "quick_back": 1,
 "vp_uuid": "C6335F62-2565-1957-4BB9-587F2FF46B00",
 "bk_path": "E:\\vp_bk5\\",
 "vm_list": [
  {
   "vm_name": "\u6d4b\u8bd55",
   "vm_ref": "vm-10811",
   "scripts_type": 1,
   "scripts": "",
   "new_vm_name": "\u865a\u673a\u540d\u79f0_2020-04-29",
   "cpu": "",
   "core_per_sock": "",
   "mem_mb": "",
   "os_type": 1,
   "disk_list": [
    {
     "id": "",
     "disk_path": "",
     "disk_name": "",
     "is_ignored": 1
    }
   ]
  }
 ],
 "bk_uuid": "67E33CDB-D75B-15B3-367D-50C764F5A26F",
 "lan_free": 23,
 "rule_name": "vp_bk cky",
 "bkup_policy": 1,
 "bkup_one_time": 1546831899,
 "bkup_schedule": [
  {
   "limit": 3,
   "sched_day": [
    "1",
    "2",
    "3"
   ],
   "sched_time": [
    "00:00"
   ],
   "sched_every": 0,
   "bkup_type": 0
  }
 ],
 "biz_grp_list": [],
 "rule_type": 0,
 "band_width": "-1",
 "compress": 0,
 "mem_snap": 0,
 "random_str": "11111111-1111-1111-1111-111111111111",
 "instant_recovery": 1,
 "auto": 0,
 "add_drill": 1,
 "drill_plat_uuid": "",
 "_": "3f352368"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10110011,
  "message": "[10110011] The node / virtual platform has no license associated with this feature."
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: createVpDrill
body: {
 "rule_name": "",
 "rule_type": 0,
 "vp_uuid": "",
 "auto": 0,
 "vm_list": [
  {
   "vm_name": "",
   "new_vm_name": "",
   "vm_ref": "99",
   "cpu": 1,
   "ver_sig": "",
   "core_per_sock": 1,
   "mem_mb": 1024,
   "scripts": "",
   "bk_uuid": "",
   "bk_path": "",
   "time": "",
   "original_rule_uuid": "",
   "scripts_type": 1,
   "os_type": 1,
   "wk_uuid": "",
   "src_uuid": ""
  }
 ],
 "quick_back": 1,
 "backup_type": "i",
 "lan_free": 23,
 "del_bkup_data": 0,
 "automate": 0,
 "auto_shutdown": 1,
 "bkup_policy": 0,
 "bkup_schedule": {
  "sched_time_start": "0",
  "limit": 0,
  "sched_day": 6,
  "sched_every": 0,
  "sched_time": [],
  "sched_gap_min": 0
 },
 "_": "3f680d42"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Lost: rule_name;\n Lost: vp_uuid;\n Lost: vm_list[0][vm_name];\n Lost: vm_list[0][new_vm_name];\n Lost: vm_list[0][original_rule_uuid];\n Lost: vm_list[0][ver_sig];\n Lost: vm_list[0][time];\n Lost: vm_list[0][bk_path];\n Lost: vm_list[0][src_uuid];\n Lost: del_bkup_swap;\n Lost: auto_startup;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: createVpFileRecovery
body: {
 "wk_ip": "",
 "os_user": "",
 "os_pwd": "",
 "wk_port": 26888,
 "wk_path": [],
 "is_override": 0,
 "rule_name": "",
 "recovery_uuid": "",
 "bk_path": [],
 "bk_ip": "",
 "is_remote": 1,
 "_": "3dcb29fe"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Lost: rule_name;\n Lost: recovery_uuid;\n Lost: os_user;\n Lost: os_pwd;\n Lost: wk_ip;\n Lost: bk_ip;\n Lost: bk_path[0];\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: createVpMove
body: {
 "new_ds": "103-\u6570\u636e\u76d8",
 "tgt_uuid": "7F16E670-1A61-D565-6905-9C68B9520907",
 "src_uuid": "7F16E670-1A61-D565-6905-9C68B9520907",
 "bk_uuid": "67E33CDB-D75B-15B3-367D-50C764F5A26F",
 "automate": 0,
 "rule_name": "testMove1 cky",
 "new_dc": "i2test",
 "bk_path": "H:\\vp_rep\\",
 "backup_type": "i",
 "new_host": "192.168.88.103",
 "quiet_snap": 1,
 "bkup_schedule": {
  "sched_time_start": "0",
  "limit": 0,
  "sched_day": 25,
  "sched_every": 0,
  "sched_time": [],
  "sched_gap_min": 0
 },
 "quick_back": 1,
 "lan_free": 23,
 "vm_list": [
  {
   "vm_name": "\u65b0\u5efa\u865a\u62df\u673a1",
   "vm_ref": "vm-11877",
   "shd_name": "\u65b0\u5efa\u865a\u62df\u673a1_move",
   "disk_list": [
    {
     "disk_path": "",
     "disk_name": "[datastore1 (1)] \u6d4b\u8bd511_\u4e34\u65f6\u6d4b\u8bd511/\u6d4b\u8bd511_\u4e34\u65f6\u6d4b\u8bd511_5-000002.vmdk",
     "new_ds": "datastore2",
     "id": "",
     "is_ignored": 1,
     "boot_index": 1
    }
   ],
   "scripts_type": "",
   "scripts": "",
   "cpu": "",
   "core_per_sock": "",
   "mem_mb": "",
   "os_type": 1,
   "new_vm_name": "",
   "dynamic_mem": 1,
   "networks": [
    {
     "network_id": "",
     "network_name": "",
     "keep_mac": 1,
     "source_network_name": "",
     "source_network_id": "",
     "mac_address": ""
    }
   ],
   "flavor_id": ""
  }
 ],
 "new_dc_mor": "datacenter-2",
 "bkup_policy": 0,
 "band_width": "-1",
 "rule_type": 1,
 "auto_shutdown": 1,
 "auto_startup": "",
 "biz_grp_list": [],
 "auto": "",
 "add_drill": 1,
 "drill_plat_uuid": "",
 "mem_snap": 1,
 "overwrite": 1,
 "network_id": "",
 "network_name": "",
 "agent_uuid": "",
 "_": "3d0cb14a"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Lost: auto_startup;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: createVpRecovery
body: {
 "bk_path_view": "H:\u000bp_bk5\testRC1_BAK_99_192.168.85.139",
 "bk_uuid": "67E33CDB-D75B-15B3-367D-50C764F5A26F",
 "new_ds": "datastore1",
 "vm_list": [
  {
   "ver_sig": "A59DB76E-E33D-4E22-BB08-59723B1FC539",
   "vm_ref": "99",
   "vm_name": "\u6d4b\u8bd55",
   "disk_list": [
    {
     "disk_name": "proxy gateway1.vmdk",
     "disk_path": "/",
     "is_same": 1,
     "new_ds": "datastore1",
     "id": "",
     "boot_index": 1
    }
   ],
   "new_vm_name": "\u6d4b\u8bd55",
   "networks": [
    {
     "keep_mac": 1,
     "network_name": "",
     "network_id": "",
     "source_network_name": "",
     "source_network_id": "",
     "source_mac_address": ""
    }
   ],
   "bk_path": "",
   "ver_time": "",
   "cpu": 1,
   "core_per_sock": 1,
   "mem_mb": 1,
   "dynamic_mem": 1,
   "flavor_id": ""
  }
 ],
 "new_hostname": "localhost.localdomain",
 "new_dc": "ha-datacenter",
 "is_create": 0,
 "vp_uuid": "928B88A6-CDBA-6F55-ADCB-15A8A935C9C2",
 "new_ds_path": "/",
 "new_vp_uuid": "928B88A6-CDBA-6F55-ADCB-15A8A935C9C2",
 "rule_name": "testRC cky",
 "lan_free": 23,
 "rule_type": 0,
 "auto_startup": 0,
 "new_dc_mor": "ha-datacenter",
 "api_type": "HostAgent",
 "biz_grp_list": [],
 "group_recovery": 0,
 "backup_rule_name": "testRC1",
 "band_width": "-1",
 "for_vp_file_rc": 1,
 "del_vm": 1,
 "network_id": "",
 "network_name": "",
 "_": "3f77d434"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10110011,
  "message": "[10110011] The node / virtual platform has no license associated with this feature."
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: createVpRep
body: {
 "new_ds": "103-\u6570\u636e\u76d8",
 "tgt_uuid": "7F16E670-1A61-D565-6905-9C68B9520907",
 "src_uuid": "7F16E670-1A61-D565-6905-9C68B9520907",
 "bk_uuid": "67E33CDB-D75B-15B3-367D-50C764F5A26F",
 "automate": 0,
 "rule_name": "testMove1 cky",
 "new_dc": "i2test",
 "bk_path": "H:\\vp_rep\\",
 "backup_type": "i",
 "new_host": "192.168.88.103",
 "quiet_snap": 1,
 "bkup_schedule": {
  "sched_time_start": "0",
  "limit": 0,
  "sched_day": 25,
  "sched_every": 0,
  "sched_time": [],
  "sched_gap_min": 0
 },
 "quick_back": 1,
 "lan_free": 23,
 "vm_list": [
  {
   "vm_name": "\u65b0\u5efa\u865a\u62df\u673a1",
   "vm_ref": "vm-11877",
   "shd_name": "\u65b0\u5efa\u865a\u62df\u673a1_move",
   "disk_list": [
    {
     "disk_path": "",
     "disk_name": "[datastore1 (1)] \u6d4b\u8bd511_\u4e34\u65f6\u6d4b\u8bd511/\u6d4b\u8bd511_\u4e34\u65f6\u6d4b\u8bd511_5-000002.vmdk",
     "new_ds": "datastore2",
     "id": "",
     "is_ignored": 1,
     "boot_index": 1
    }
   ],
   "scripts_type": "",
   "scripts": "",
   "cpu": "",
   "core_per_sock": "",
   "mem_mb": "",
   "os_type": 1,
   "new_vm_name": "",
   "dynamic_mem": 1,
   "networks": [
    {
     "network_id": "",
     "network_name": "",
     "keep_mac": 1,
     "source_network_name": "",
     "source_network_id": "",
     "mac_address": ""
    }
   ],
   "flavor_id": ""
  }
 ],
 "new_dc_mor": "datacenter-2",
 "bkup_policy": 0,
 "band_width": "-1",
 "rule_type": 1,
 "auto_shutdown": 1,
 "auto_startup": "",
 "biz_grp_list": [],
 "auto": "",
 "add_drill": 1,
 "drill_plat_uuid": "",
 "mem_snap": 1,
 "overwrite": 1,
 "network_id": "",
 "network_name": "",
 "agent_uuid": "",
 "_": "3e7f9471"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  The rule_type field must be one of: 0,10.;\n The automate field must be one of: 1.;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: deleteVpBackup
body: {
 "rule_uuids": [
  "11111111-1111-1111-1111-111111111111"
 ],
 "group_uuids": [],
 "_": "3f4257ea"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist",
  "fail_list": [
   {
    "code": 10001011,
    "message": "[10001011] Item does not exist"
   }
  ]
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: deleteVpDrill
body: {
 "rule_uuids": [
  "11111111-1111-1111-1111-111111111111"
 ],
 "group_uuids": [],
 "_": "3f091a77"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist",
  "fail_list": [
   {
    "code": 10001011,
    "message": "[10001011] Item does not exist"
   }
  ]
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: deleteVpFileRecovery
body: {
 "rule_uuids": [
  "11111111-1111-1111-1111-111111111111"
 ],
 "_": "3f703d83"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist",
  "fail_list": [
   {
    "code": 10001011,
    "message": "[10001011] Item does not exist"
   }
  ]
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: deleteVpMove
body: {
 "rule_uuids": [
  "11111111-1111-1111-1111-111111111111"
 ],
 "group_uuids": [],
 "delete_tgtvm": 1,
 "_": "3e7750f4"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist",
  "fail_list": [
   {
    "code": 10001011,
    "message": "[10001011] Item does not exist"
   }
  ]
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: deleteVpRecovery
body: {
 "rule_uuids": [
  "11111111-1111-1111-1111-111111111111"
 ],
 "group_uuids": [],
 "delete_tgtvm": 1,
 "_": "3eb2cc83"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist",
  "fail_list": [
   {
    "code": 10001011,
    "message": "[10001011] Item does not exist"
   }
  ]
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: deleteVpRep
body: {
 "rule_uuids": [
  "11111111-1111-1111-1111-111111111111"
 ],
 "group_uuids": [],
 "delete_tgtvm": 1,
 "_": "3e3544f4"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist",
  "fail_list": [
   {
    "code": 10001011,
    "message": "[10001011] Item does not exist"
   }
  ]
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVmProtectRate
body: {
 "vp_uuid": "F28BA5A6-4FF9-E596-4371-1ED203D45143",
 "_": "3eeb1163"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "info_list": [],
  "vm_total": 0,
  "vm_protected": 0
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVpBackup
body: {}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVpBackupGroup
body: {}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVpDrill
body: {}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVpFileRecovery
body: {}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVpFileRecoveryVmIp
body: {
 "recovery_uuid": "",
 "_": "3f3dd4d2"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Lost: recovery_uuid;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVpMove
body: {}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVpRecoveryGroup
body: {}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVpRep
body: {}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: describeVpRuleRate
body: {
 "uuid": "",
 "wk_uuid": "F28BA5A6-4FF9-E596-4371-1ED203D45143",
 "mode": "month",
 "type": "I2VP_BK",
 "group_uuid": "",
 "_": "3f200b94"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  The type field must be one of: VP_PT,VP_MV,VP_RC,VP_BK,VP_OR.;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: failbackVpRep
body: {
 "operate": "start",
 "rule_uuids": "1C89A121-6B03-24B2-9273-D4B93C0687AD",
 "snap_point": "",
 "op_code": "",
 "group_uuids": [],
 "power_on": 1,
 "_": "3f1fc77c"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: failoverVpRep
body: {
 "operate": "start",
 "rule_uuids": "1C89A121-6B03-24B2-9273-D4B93C0687AD",
 "snap_point": "",
 "op_code": "",
 "group_uuids": [],
 "power_on": 1,
 "_": "3f3884f0"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpBackup
body: {
 "page": 1,
 "limit": 10,
 "type": 0,
 "_": "3e334d2a"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "info_list": [],
  "total": 0
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpBackupGroup
body: {
 "page": 1,
 "limit": 10,
 "type": 0,
 "where_args[bk_path]": "H:\\vp_bk5\\",
 "_": "3f5162d6"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "info_list": []
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpBackupStatus
body: {
 "_": "3f3dfc7b"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "status": []
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpDrill
body: {
 "page": 1,
 "limit": 10,
 "_": "3ee27136"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "info_list": [],
  "total": 0
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpDrillStatus
body: {
 "_": "3f5b1d9d"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "status": []
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpFileRecovery
body: {
 "page": 1,
 "limit": 1,
 "_": "3d002872"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "info_list": [],
  "total": 0
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpFileRecoveryStatus
body: {
 "_": "3f4ff165"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "status": []
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpMove
body: {
 "page": 1,
 "limit": 10,
 "_": "3f3bcbec"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "info_list": [],
  "total": 0
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpMoveStatus
body: {
 "_": "3e9ab792"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "status": []
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpRecovery
body: {
 "type": 0,
 "limit": 10,
 "page": 1,
 "_": "3ecb2eba"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "info_list": [],
  "total": 0
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpRecoveryStatus
body: {
 "_": "3ec45d34"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "status": []
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpRep
body: {
 "page": 1,
 "limit": 10,
 "_": "3f23a867"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "info_list": [],
  "total": 0
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpRepPointList
body: {
 "type": "",
 "_": "3cf420a0"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist 22D03E06-94D0-5E2C-336E-4BEEC2D28EC4"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpRepStatus
body: {
 "_": "3e043fa3"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 0,
  "message": "[0] success",
  "status": []
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: modifyVpBackup
body: {
 "_": "3f393881"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Lost: del_bkup_data;\n Lost: bkup_one_time;\n Lost: quick_back;\n Lost: bk_path;\n Lost: rule_type;\n Lost: vp_uuid;\n Lost: vm_list[0][vm_name];\n Lost: vm_list[0][vm_ref];\n Lost: quiet_snap;\n Lost: lan_free;\n Lost: rule_name;\n Lost: bkup_policy;\n Lost: bk_uuid;\n Lost: band_width;\n Lost: compress;\n Lost: mem_snap;\n Lost: add_drill;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: modifyVpMove
body: {
 "new_ds": "",
 "support_cbt": 1,
 "tgt_uuid": "",
 "del_bkup_swap": 1,
 "src_uuid": "3D0BDA2c-5B5F-f2f8-bc49-aBdD8cb2BCF8",
 "bk_uuid": "",
 "automate": 1,
 "rule_name": "",
 "new_dc": "",
 "bk_path": "",
 "backup_type": "",
 "new_host": "",
 "quiet_snap": 1,
 "bkup_schedule": {},
 "quick_back": 1,
 "del_bkup_data": 1,
 "lan_free": 1,
 "vm_list": [],
 "time_window": "",
 "new_dc_mor": "",
 "bkup_policy": 1,
 "_": "3f28574a"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: modifyVpRep
body: {
 "new_ds": "",
 "support_cbt": 1,
 "tgt_uuid": "",
 "del_bkup_swap": 1,
 "src_uuid": "3D0BDA2c-5B5F-f2f8-bc49-aBdD8cb2BCF8",
 "bk_uuid": "",
 "automate": 1,
 "rule_name": "",
 "new_dc": "",
 "bk_path": "",
 "backup_type": "",
 "new_host": "",
 "quiet_snap": 1,
 "bkup_schedule": {},
 "quick_back": 1,
 "del_bkup_data": 1,
 "lan_free": 1,
 "vm_list": [],
 "time_window": "",
 "new_dc_mor": "",
 "bkup_policy": 1,
 "_": "3f032312"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Lost: rule_name;\n Lost: rule_type;\n Lost: tgt_uuid;\n Lost: bk_uuid;\n Lost: bk_path;\n Lost: new_host;\n Lost: new_ds;\n Lost: backup_type;\n Lost: vm_list[0][vm_name];\n Lost: vm_list[0][vm_ref];\n Lost: vm_list[0][shd_name];\n Lost: bkup_schedule[limit];\n Lost: bkup_schedule[sched_every];\n Lost: bkup_schedule[sched_time][0];\n The lan_free field must be one of: 23,31.;\n Lost: band_width;\n Lost: add_drill;\n Lost: random_str;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: modifyVpRepGroup
body: {
 "new_ds": "103-\u6570\u636e\u76d8",
 "support_cbt": 1,
 "tgt_uuid": "7F16E670-1A61-D565-6905-9C68B9520907",
 "del_bkup_swap": 0,
 "src_uuid": "7F16E670-1A61-D565-6905-9C68B9520907",
 "bk_uuid": "67E33CDB-D75B-15B3-367D-50C764F5A26F",
 "automate": 0,
 "rule_name": "testMove1 cky",
 "new_dc": "i2test",
 "bk_path": "H:\\vp_rep\\",
 "backup_type": "i",
 "new_host": "192.168.88.103",
 "quiet_snap": 1,
 "bkup_schedule": {
  "sched_time_start": "0",
  "limit": 0,
  "sched_day": 21,
  "sched_every": 0,
  "sched_time": [],
  "sched_gap_min": 0
 },
 "quick_back": 1,
 "del_bkup_data": 0,
 "lan_free": 23,
 "vm_list": [
  {
   "vm_name": "\u65b0\u5efa\u865a\u62df\u673a1",
   "vm_ref": "vm-11877",
   "shd_name": "\u65b0\u5efa\u865a\u62df\u673a1_move",
   "overwrite": 0,
   "disk_list": [
    {
     "disk_path": "",
     "disk_name": "[datastore1 (1)] \u6d4b\u8bd511_\u4e34\u65f6\u6d4b\u8bd511/\u6d4b\u8bd511_\u4e34\u65f6\u6d4b\u8bd511_5-000002.vmdk",
     "new_ds": "datastore2",
     "id": ""
    }
   ]
  }
 ],
 "time_window": "",
 "new_dc_mor": "datacenter-2",
 "bkup_policy": 0,
 "band_width": "-1",
 "rule_type": 1,
 "auto_shutdown": 1,
 "_": "3e8ceabc"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  The rule_type field must be one of: 0,10.;\n The automate field must be one of: 1.;\n Lost: add_drill;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: moveVpMove
body: {
 "operate": "start",
 "rule_uuids": "1C89A121-6B03-24B2-9273-D4B93C0687AD",
 "snap_point": "",
 "op_code": "",
 "group_uuids": [],
 "power_on": 1,
 "_": "3ea53b9a"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: setStatusVpDrill
body: {
 "operate": "",
 "rule_uuids": "[C6335F62-2565-1957-4BB9-587F2FF46B00]",
 "group_uuids": [],
 "status": "",
 "msg": "",
 "_": "3eeadf7a"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n Not uuid: rule_uuids[0];\n Lost: operate;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: startVpBackup
body: {
 "operate": "start",
 "rule_uuids": "[C6335F62-2565-1957-4BB9-587F2FF46B00]",
 "group_uuids": [],
 "bkup_type": "",
 "_": "3f6067fb"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n Not uuid: rule_uuids[0];\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: startVpDrill
body: {
 "operate": "",
 "rule_uuids": "[C6335F62-2565-1957-4BB9-587F2FF46B00]",
 "group_uuids": [],
 "status": "",
 "msg": "",
 "_": "3f52ab83"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n Not uuid: rule_uuids[0];\n Lost: operate;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: startVpMove
body: {
 "operate": "start",
 "rule_uuids": "1C89A121-6B03-24B2-9273-D4B93C0687AD",
 "snap_point": "",
 "op_code": "",
 "group_uuids": [],
 "power_on": 1,
 "_": "3e79b49c"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: startVpRecovery
body: {
 "operate": "start",
 "rule_uuids": "641A27BB-B4D1-F482-1FB8-E856898626DA",
 "rule_type": 0,
 "group_uuids": [],
 "_": "3e98a220"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: startVpRep
body: {
 "operate": "start",
 "rule_uuids": "1C89A121-6B03-24B2-9273-D4B93C0687AD",
 "snap_point": "",
 "op_code": "",
 "group_uuids": [],
 "power_on": 1,
 "_": "3e77deb9"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: stopVpDrill
body: {
 "operate": "",
 "rule_uuids": "[C6335F62-2565-1957-4BB9-587F2FF46B00]",
 "group_uuids": [],
 "status": "",
 "msg": "",
 "_": "3f496d1d"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n Not uuid: rule_uuids[0];\n Lost: operate;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: stopVpMove
body: {
 "operate": "start",
 "rule_uuids": "1C89A121-6B03-24B2-9273-D4B93C0687AD",
 "snap_point": "",
 "op_code": "",
 "group_uuids": [],
 "power_on": 1,
 "_": "3f749100"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: stopVpRecovery
body: {
 "operate": "stop",
 "rule_uuids": "641A27BB-B4D1-F482-1FB8-E856898626DA",
 "rule_type": 0,
 "group_uuids": [],
 "_": "3e8a99b7"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: stopVpRep
body: {
 "operate": "start",
 "rule_uuids": "1C89A121-6B03-24B2-9273-D4B93C0687AD",
 "snap_point": "",
 "op_code": "",
 "group_uuids": [],
 "power_on": 1,
 "_": "3ee4d3e2"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: stopVpBackup
body: {
 "operate": "stop",
 "rule_uuids": "[C6335F62-2565-1957-4BB9-587F2FF46B00]",
 "group_uuids": [],
 "bkup_type": "",
 "_": "3ed8ec5f"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Not array: rule_uuids;\n Not uuid: rule_uuids[0];\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: vpFileRecoveryLivecdPartition
body: {
 "recovery_uuid": "E16C82aF-7DBC-A12F-8DdA-fEE3B6eD5f44",
 "bk_ip": "",
 "_": "3e7cb830"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001002,
  "message": "[10001002] Invalid Parameter  Lost: bk_ip;\n"
 }
}
-----------------------------------------------------------END>

<START-----------------------------------------------------------
Method: listVpMovePointList
body: {
 "type": "",
 "_": "3f75de2a"
}
response: {
 "ret": 200,
 "msg": "",
 "data": {
  "code": 10001011,
  "message": "[10001011] Item does not exist 22D03E06-94D0-5E2C-336E-4BEEC2D28EC4"
 }
}
-----------------------------------------------------------END>

